$blue: #9FBFBF;
$margin: 5%;
$cream: #F2EFEB;
$cream2: $cream - 100;


/* Sass terminal:
	$ sass -w scss/style.scss:css/style.css --style compressed (or comapct or expanded)
*/

// @content --> mixin except block of content
$width: 50%;
@mixin phone($width: 80%) {
	@media only screen and (max-width: 480px) {
		@content;
	}
}
.main {
	.header {
		width: 80%;
		margin: 0 auto;
		height: 200px;
	}
	@include phone {
		.header {
			width: $width; // = 50%
		}
	}
}


// Placeholder selectors...
// %blue
#main div%blue {
	color: white;
	background-color: blue;
	font-size: 14px;
}
.sign {
	@extend %blue;
}
.box {
	@extend %blue;
}

@mixin border-radius($radius: 20px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

body {
	background: #262626;
	font-family: helvetica, ariel, sans-serif;
	font-size: 14px;
}

header {
	margin: 20px 0 0 $margin;

	h1 { color: $blue; }
	h2 { 
		color: $blue;
		margin: 10px $margin + 5%;
	}
}

p {
	margin: 20px $margin;
}

a {
	color: $blue;
}

.grad {
	@include border-radius;

	padding: 1%;
	background-color: #F2EFEB;
	background-image: -webkit-gradient(linear, left top, left bottom, from(#F2EFEB), to($cream2));
	background-image: -webkit-linear-gradient(top, $cream, $cream2);
	background-image: 	 -moz-linear-gradient(top, $cream, $cream2);
	background-image: 	  -ms-linear-gradient(top, $cream, $cream2);
	background-image: 	   -o-linear-gradient(top, $cream, $cream2);
	
	.intro { 
		background: rgba(#333, 0.5); // Build in sass function 'rgba'
		@include border-radius;
		color: #aaa;
		width: round(percentage(550px / 1440px)); // Build in sass fuction 'percentage'
		float: left;
		.one {
			color: $blue + 100;
				a { 
					font-size: 20px;
					background: $cream;
					@include border-radius(5px);
				}
				a:hover {
					background: $cream - 100;
				}
		}
	}
	// Selector Inheritance..
	.feature {
		@extend .intro; // take all the same styles from .intro
		float: right;
		width: round(percentage(890px / 1440px)); // Build in sass fuction 'percentage'
	}
}

// Using Lists an @each...
ul.social-links li{
	list-style: none;

	a {
		display: block;
		float: left;
		width: 64px;
		height: 64px;
		text-indent: -999px;
	}
}
$icons: (twitter, facebook, youtube, rss);
@each $social in $icons {
	.#{$social} {
		background:url('../img/#{$social}.png') no-repeat;
	}
}

// Nth Function in Lists...
@each $p in (
	one black,
	two black + 20,
	three white,
	four black + 60
) {
	.#{nth($p, 1)} {
		background: #{nth($p, 2)};
		clear: both;
	}
}
/*** *** ***/

// Define own functions
@function text-contrast($background) {
	@if lightness($background) < 50% {
		@return lighten($background, 70%);
	}
	@else {
		@return darken($background, 90%);
	}
}
/*
	@function text-contrast($background, $val) {
		@return ( $background + $val );
	}
*/

.three {
	//color: text-contrast(black + 40, 100);
	color: text-contrast(white);
}


.clearfix:before, .clearfix:after {
	content: "";
	display: table;
}
.clearfix:after { clear: both; }
.clearfix {	zoom: 1; }